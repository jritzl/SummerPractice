
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
library UNISIM;
use UNISIM.VComponents.all;

entity rxsim is
  
end rxsim;

architecture Behavioral of rxsim is

  



component transmitter is
generic (
c_clkfreq		: integer := 50_000_000;
c_baudrate		: integer := 115_200
);
port (
clk				: in std_logic;
reset			: in std_logic ;
data_input		: in std_logic_vector (7 downto 0);
data_valid	    : in std_logic;
transmit_out	: out std_logic;
data_read	    : out std_logic;
data_done	    : out std_logic

);
end component;
       
       component receiver is
generic (
c_clkfreq		: integer := 50_000_000;
c_baudrate		: integer := 115_200
);
port (
clk				: in std_logic;
reset			: in std_logic;
receiver_input			: in std_logic;
data_out			: out std_logic_vector (7 downto 0);
isRXdone	: out std_logic
);
end component;

constant c_clkperiod	: time := 10 ns;
constant msg1		: std_logic_vector (9 downto 0) := '1' & "10101010" & '0'; --stop bit - mesaj - start bit least significant first!
constant msg2	: std_logic_vector (9 downto 0) := '1' & "11110000" & '0'; --stop bit - mesaj - start bit
constant c_baud115200	: time := 8.68 us;


    attribute keep : string;  

    signal reset_n : std_logic := '1';

 signal rx				: std_logic := '1';
   
signal clk				: std_logic := '0';
signal data_input			: std_logic_vector (7 downto 0) := (others => '0');
signal data_valid		: std_logic := '0';
signal transmit_out				: std_logic;
signal data_read	: std_logic;
signal data_done	 :  std_logic;
signal data_out1			:std_logic_vector (7 downto 0);
signal isRXdone	: std_logic;

    
begin

receiver1 : receiver
port map(
clk				=> clk				  ,
reset			=> reset_n,
receiver_input			=> rx			      ,
data_out			=> data_out1			  ,
isRXdone	=> isRXdone
);

transmitter1: transmitter

port map (
clk				=> clk,
reset			=> reset_n,
data_input		=> data_out1,
data_valid	    => isRXdone,
transmit_out	=> transmit_out,
data_read	    => data_read,
data_done	    => data_done

);


clockx : process begin

clk	<= '0';
wait for c_clkperiod/2;
clk	<= '1';
wait for c_clkperiod/2;

end process clockx;

yakala : process begin

wait for c_clkperiod*10;

for i in 0 to 9 loop
	rx <= msg1(i);
	wait for c_baud115200;
end loop;

wait for 10 us;

for i in 0 to 9 loop
	rx <= msg2(i);
	wait for c_baud115200;
end loop; 

wait for 20 us;



end process yakala;



end Behavioral;
