
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;
library UNISIM;
use UNISIM.VComponents.all;

entity top_rxtx is
generic (
c_clkfreq		: integer := 50_000_000;
c_baudrate		: integer := 115_200
);
port (
clk				: in std_logic;
reset_n				: in std_logic;
rx	    : in std_logic;
tx	: out std_logic

); 
end top_rxtx;

architecture Behavioral of top_rxtx is

  



component transmitter is
generic (
c_clkfreq		: integer := 50_000_000;
c_baudrate		: integer := 115_200
);
port (
clk				: in std_logic;
reset			: in std_logic ;
data_input		: in std_logic_vector (7 downto 0);
data_valid	    : in std_logic;
transmit_out	: out std_logic;
data_read	    : out std_logic;
data_done	    : out std_logic

);
end component;
       
       component receiver is
generic (
c_clkfreq		: integer := 50_000_000;
c_baudrate		: integer := 115_200
);
port (
clk				: in std_logic;
reset			: in std_logic;
receiver_input			: in std_logic;
data_out			: out std_logic_vector (7 downto 0);
isRXdone	: out std_logic
);
end component;

constant c_clkperiod	: time := 10 ns;

constant c_baud115200	: time := 8.68 us;


    attribute keep : string;  


signal data_input			: std_logic_vector (7 downto 0) := (others => '0');
signal data_valid		: std_logic := '0';
signal transmit_out				: std_logic;
signal data_read	: std_logic;
signal data_done	 :  std_logic;
signal data_out1			:std_logic_vector (7 downto 0);
signal isRXdone	: std_logic;

    
begin

receiver1 : receiver
generic map(
c_clkfreq				=> c_clkfreq				  ,
c_baudrate			=> c_baudrate

)
port map(
clk				=> clk				  ,
reset			=> reset_n,
receiver_input			=> rx			      ,
data_out			=> data_out1			  ,
isRXdone	=> isRXdone
);

transmitter1: transmitter
generic map(
c_clkfreq				=> c_clkfreq				  ,
c_baudrate			=> c_baudrate)
port map (
clk				=> clk,
reset			=> reset_n,
data_input		=> data_out1,
data_valid	    => isRXdone,
transmit_out	=> tx,
data_read	    => data_read,
data_done	    => data_done

);


end Behavioral;
